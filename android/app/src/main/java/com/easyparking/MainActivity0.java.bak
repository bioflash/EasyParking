package com.easyparking;

import android.app.Activity;
import android.os.Bundle;
import android.view.KeyEvent;

import com.facebook.react.ReactActivity;
import com.facebook.react.ReactPackage;
import com.facebook.react.ReactInstanceManager;
import com.facebook.react.ReactRootView;
import com.facebook.react.modules.core.DefaultHardwareBackBtnHandler;
import com.facebook.react.shell.MainReactPackage;
import com.facebook.react.LifecycleState;

import java.util.Arrays;
import java.util.List;

public class MainActivity extends Activity implements DefaultHardwareBackBtnHandler {
    private ReactInstanceManager mReactInstanceManager;
    private ReactRootView mReactRootView;

    @Override
    protected void onCreate(Bundle savedInstanceState){
      super.onCreate(savedInstanceState);
      mReactRootView = new ReactRootView(this);
      
      mReactInstanceManager = ReactInstanceManager.builder()
      .setApplication(getApplication())
      .setBundleAssetName("index.android.bundle")
      .setJSMainModuleName("index.android")
      .addPackage(new MainReactPackage())
      .addPackage(new LocationTrackingPackage())
      .setUseDeveloperSupport(BuildConfig.DEBUG)
      .setInitialLifecycleState(LifecycleState.RESUMED)
      .build();
      
      mReactRootView.startReactApplication(mReactInstanceManager, "EasyParking",null);
      setContentView(mReactRootView);
      
    }
    
    @Override
    public boolean onKeyUp(int keyCode, KeyEvent event) {
        if (keyCode == KeyEvent.KEYCODE_MENU && mReactInstanceManager != null) {
            mReactInstanceManager.showDevOptionsDialog();
            return true;
        }
        return super.onKeyUp(keyCode, event);
    }
    
    @Override
    public void onBackPressed() {
     if (mReactInstanceManager != null) {
       mReactInstanceManager.onBackPressed();
     } else {
       super.onBackPressed();
     }
   }
   
   @Override
   public void invokeDefaultOnBackPressed() {
     super.onBackPressed();
   }
   
   @Override
    protected void onPause() {
        super.onPause();

        if (mReactInstanceManager != null) {
            //TO-DO ReactInstanceManager seems have no onPause method now
            //mReactInstanceManager.onPause();
        }
    }

    @Override
    protected void onResume() {
        super.onResume();

        if (mReactInstanceManager != null) {
            //TO-DO ReactInstanceManager seems have no onResume method now
            //mReactInstanceManager.onResume(this);
        }
    }
    /**
     * Returns the name of the main component registered from JavaScript.
     * This is used to schedule rendering of the component.
     */
    /*@Override
    protected String getMainComponentName() {
        return "EasyParking";
    }*/

    /**
     * Returns whether dev mode should be enabled.
     * This enables e.g. the dev menu.
     */
    /*@Override
    protected boolean getUseDeveloperSupport() {
        return BuildConfig.DEBUG;
    }*/

    /**
     * A list of packages used by the app. If the app uses additional views
     * or modules besides the default ones, add more packages here.
     */
    /*@Override
    protected List<ReactPackage> getPackages() {
        return Arrays.<ReactPackage>asList(
            new MainReactPackage()
        );
    }*/
}
